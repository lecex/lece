kind: Service
apiVersion: v1
metadata:
  name: {{ include "lecex.fullname" . }}-user-api
spec:
  selector:
    app: user-api
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8080
      name: http
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-api
  labels:
    app: user-api
spec:
  {{ if .Values.userApi.replicaCount }}
  replicas: {{ .Values.userApi.replicaCount }}
  {{ else }}
  replicas: {{ .Values.replicaCount }}
  {{ end }}
  selector:
    matchLabels:
      app: user-api
  template:
    metadata:
      labels:
        app: user-api
    spec:
      containers:
        - name: user-api
          image: "{{ .Values.userApi.image.repository }}:{{ .Values.userApi.image.tag }}"
          imagePullPolicy: {{ .Values.userApi.image.pullPolicy }}
          command: [
            "userApi",
            "--server_address=:8080",
          ]
          env:
            - name: REDIS_HOST
              value: "{{ include "lecex.fullname" . }}-redis-master"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: {{ include "lecex.fullname" . }}-redis
            - name: MICRO_REGISTRY
              value: "static"
            - name: MICRO_SELECTOR
              value: "static"
            - name: USER_SERVICE
              value: "user"
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        - name: health
          image: microhq/health:kubernetes
          command: [
            "/health",
            "--health_address=0.0.0.0:8081",
            "--server_name=user-api",
            "--server_address=0.0.0.0:8080"
          ]
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3